# Copyright (C) 2018-2022 Intel Corporation
# SPDX-License-Identifier: Apache-2.0
#

@PACKAGE_INIT@

include(CMakeFindDependencyMacro)

set_and_check(OpenVINO_SOURCE_DIR "@OpenVINO_SOURCE_DIR@")

# Variables to export in plugin's projects

set(ov_options "@IE_OPTIONS@")
list(APPEND ov_options CMAKE_CXX_COMPILER_LAUNCHER CMAKE_C_COMPILER_LAUNCHER
                       CMAKE_BUILD_TYPE CMAKE_SKIP_RPATH CMAKE_INSTALL_PREFIX)
file(TO_CMAKE_PATH "${CMAKE_CURRENT_LIST_DIR}" cache_path)

message(STATUS "The following CMake options are exported from OpenVINO Developer package")
message("")
foreach(option IN LISTS ov_options)
    if(NOT DEFINED "${option}")
        load_cache("${cache_path}" READ_WITH_PREFIX "" ${option})
    endif()
    message("    ${option}: ${${option}}")
endforeach()
message("")

# for samples in 3rd party projects
set_and_check(gflags_DIR "@gflags_BINARY_DIR@")

#
# Content
#

find_dependency(IEDevScripts
                PATHS "${OpenVINO_SOURCE_DIR}/cmake/developer_package"
                NO_CMAKE_FIND_ROOT_PATH
                NO_DEFAULT_PATH)

find_dependency(OpenVINO
                PATHS "${CMAKE_CURRENT_LIST_DIR}"
                NO_CMAKE_FIND_ROOT_PATH
                NO_DEFAULT_PATH)

foreach(component @openvino_export_components@)
    string(FIND "${component}" "_legacy" index)
    if (index EQUAL -1)
        include("${CMAKE_CURRENT_LIST_DIR}/ov_${component}_dev_targets.cmake")
    endif()
endforeach()

if(ENABLE_SYSTEM_PUGIXML)
    find_dependency(PugiXML)
    set_property(TARGET pugixml PROPERTY IMPORTED_GLOBAL TRUE)
    add_library(openvino::pugixml ALIAS pugixml)
endif()

# inherit OpenCV from main OpenVINO project if enabled
if ("@OpenCV_FOUND@")
    load_cache("${cache_path}" READ_WITH_PREFIX "" OpenCV_DIR)
    find_dependency(OpenCV)
endif()

#
# Extra Compile Flags
#

if(CMAKE_COMPILER_IS_GNUCXX)
    ie_add_compiler_flags(-Wno-error=unused-variable)
    ie_add_compiler_flags(-Wno-error=unused-but-set-variable)
    if(SUGGEST_OVERRIDE_SUPPORTED)
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-suggest-override")
    endif()
endif()

# Don't threat deprecated API warnings as errors in 3rd party apps
ie_deprecated_no_errors()
